##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-8-2021
##
##

[infoblox_branch_source_type_1]
DEST_KEY = MetaData:Sourcetype
REGEX = \sdhcpd\[
FORMAT = sourcetype::infoblox:dhcp

[infoblox_branch_source_type_2]
DEST_KEY = MetaData:Sourcetype
REGEX = \snamed\[
FORMAT = sourcetype::infoblox:dns

[infoblox_branch_source_type_3]
DEST_KEY = MetaData:Sourcetype
REGEX = \sthreat-protect-log(?:\[|\:)
FORMAT = sourcetype::infoblox:threatprotect

[infoblox_branch_source_type_4]
DEST_KEY = MetaData:Sourcetype
REGEX = \d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d+Z\s+\[[^\]]+\]:
FORMAT = sourcetype::infoblox:audit

[infoblox_dhcp_extract_field_0]
REGEX = (?:\s+(?<infoblox_host>[^\s]+)\s+)?dhcpd\[(?<pid>\d+)\]:

[infoblox_dhcp_extract_field_12]
REGEX = (DHCPDISCOVER)\sfrom\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s([^\:$]+)(?:\:\s([^$]+))?$
FORMAT = dhcp_type::$1 dest_mac::$2 dest_hostname::$3 relay::$4 dhcp_discover_comment::$5

[infoblox_dhcp_extract_field_1]
REGEX = (?<dhcp_type>DHCPDISCOVER)\sfrom\s(?<dest_mac>[A-Za-z0-9:]+)(?:\s+\((?<dest_hostname>[^\)]+)\))?\s+via\s+(?<relay>[^\s]+)\s+TransID\s+(?<trans_id>[^\s:]+)(?:\s+uid\s+(?<uid>[A-Za-z0-9:]+))?(?::\s+(?<dhcp_discover_comment>.*)$)?

[infoblox_dhcp_extract_field_2]
REGEX = (DHCPOFFER)\son\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\sto\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s(.+)\srelay\s([^\s]+)\slease\-duration\s(\d+)(?:\s+offered-duration\s+(\d+))?(?:\s+uid\s+([A-Za-z0-9:]+))?
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 interface::$5 relay::$6 lease_duration::$7 offered_duration::$8 uid::$9

[infoblox_dhcp_extract_field_3]
REGEX = (DHCPINFORM)\sfrom\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\svia\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s*(?:\:\s*(.+))?
FORMAT = dhcp_type::$1 dest_ip::$2 relay::$3 dhcp_inform_comment::$4

[infoblox_dhcp_extract_field_4]
REGEX = (DHCPACK)\sto\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^)]+)\)\s)?via\s(\S+)
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 interface::$5

[infoblox_dhcp_extract_field_5]
REGEX = (DHCPNAK)\sto\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^)]+)\)\s)?via\s(\S+)
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 interface::$5

[infoblox_dhcp_extract_field_6]
REGEX = (DHCPACK)\son\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\sto\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^)]+)\)\s)?via\s(\S+)\srelay\s(\S+)\slease\-duration\s(\d+)(?:\s+\(RENEW\))?(?:\s+uid\s+([A-Za-z0-9:]+))?
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 interface::$5 relay::$6 lease_duration::$7 uid::$8

[infoblox_dhcp_extract_field_7]
REGEX = (DHCPREQUEST)\sfor\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s(?:\(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\)\s)?from\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s(\S+)(?:\s+TransID\s+([^\s:]+))?(?:\s+uid\s+([A-Za-z0-9:]+))?
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 relay::$5 trans_id::$6 uid::$7

[infoblox_dhcp_extract_field_8]
REGEX = (DHCPRELEASE)\sof\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\sfrom\s([0-9a-zA-Z]{2}(?:\:[0-9a-zA-Z]{2}){5})\s(?:\(([^\)]+)\)\s)?via\s(\S+).*?(?:\s+TransID\s+([^\s:]+))?(?:\s+uid\s+([A-Za-z0-9:]+))?$
FORMAT = dhcp_type::$1 dest_ip::$2 dest_mac::$3 dest_hostname::$4 relay::$5 trans_id::$6 uid::$7

[infoblox_dhcp_extract_field_9]
REGEX = ddns\.c\(\d+\)\:\s([^\.]+)\s([^$]+)
FORMAT = fail_message::$1 detail_fail_message::$2

[infoblox_dhcp_extract_field_10]
REGEX = lease\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})
SOURCE_KEY = detail_fail_message
FORMAT = lease_ip::$1

[infoblox_dhcp_extract_field_11]
REGEX = (?i)(REFUSED|Invalid|ignored|rejected|DHCPRELEASE|DHCPDECLINE|DHCPNAK|removed|removing)
FORMAT = action_blocked::$1

[infoblox_dhcp_DHCPEXPIRE_0]
REGEX = (?<dhcp_type>DHCPEXPIRE)\son\s(?<dest_ip>[^\s]+)\s+to\s+(?<dest_mac>[A-Za-z0-9:]+)

[dns_request]
REGEX = client\s(?:\@\S+\s)?(?<dns_request_client_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})#(?<dns_request_client_port>\d+).*\s(?<message_type>query):\s(?<dns_request_queried_domain>\S+)\s(?<dns_request_class_name>\w+)\s(?<dns_request_type_name>\w+)\s(?<dns_request_setDC>(?:\+|\-)\S*)\s\((?<dns_request_name_serverIP>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})\)
SOURCE_KEY = named_message

[dns_response]
REGEX = (?<log_date>\S+)\s(?<log_time>\S+)\sclient\s(?<dns_response_client_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})#(?<dns_response_client_port>\d+)?:\s((?<dns_view>[^:]+)(:\s))?(?<dns_response_protocol>\w+):\squery:\s(?<dns_response_queried_domain>\S+)\s(?<dns_response_class_name>\w+)\s(?<dns_response_type_name>\w+)\s(?<message_type>response):\s(?<dns_response_rcode>\w+)\s(?<dns_response_flags>\S+)\s?(?<dns_response_RR_in_TEXT>[\S+\s+]*)?
SOURCE_KEY = named_message

[dns_records_extract]
REGEX = (?<dns_answer_name>\S+)\s(?<dns_answer_ttl>\d+)\s(?<dns_class>\S+)\s(?<dns_type>\S+)\s(?<dns_rdata>\S+)
SOURCE_KEY = dns_record
MV_ADD=true

[dns_incepted]
REGEX=(?<dns_record>[^;]+)
SOURCE_KEY=dns_response_RR_in_TEXT
MV_ADD=true

[dns_request_src]
REGEX=(?<src_req>.+)
SOURCE_KEY=dns_request_client_ip

[dns_response_src]
REGEX=(?<src_resp>.+)
SOURCE_KEY=dns_response_client_ip

[dns_request_record_type]
REGEX=(?<record_type_req>.+)
SOURCE_KEY=dns_request_type_name

[dns_response_record_type]
REGEX=(?<record_type_resp>.+)
SOURCE_KEY=dns_response_type_name

# Extract rpz fields from Common Event Format (CEF:0)
[dns_rpz_cef_0]
REGEX = CEF:\d\|Infoblox\|[^\|]+\|([^|]*)\|([^\|]+)\|([^\|]+)\|(\d)
FORMAT = product_version::$1 dns_rpz_type::$2 dns_rpz_policy_action::$3 dns_rpz_severity_id::$4 message_type::response

[dns_query_denied]
REGEX = client\s(?:\@\S+\s)?(?<dns_request_client_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})#(?<dns_request_client_port>\d+).*\s(?<message_type>query)\s+'(?<query>[^/]+)(?:/(?<record_type>[^/]+))?/[^/]+'\sdenied
SOURCE_KEY = named_message

[dns_query_failed]
REGEX = client\s(?:\@\S+\s)?(?<dns_request_client_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}|(?:::)?(?:[a-zA-Z\d]{1,4}::?){1,7}[a-zA-Z\d]{0,4})#(?<dns_request_client_port>\d+).*\s\([^)]+\):\s(?<message_type>query)\sfailed\s\((?<dns_response_rcode>[^)]+)\)\sfor\s(?<query>[^/]+)/[^/]+/(?<record_type>[^\s]+).*
SOURCE_KEY = named_message

[infoblox_dns_extract_field_0]
REGEX = (?:\s+(?<infoblox_host>[^\s]+)\s+)?named\[(?<pid>\d+)\]:\s+(?:infoblox-responses:\s+)?(?<named_message>.+)$

[infoblox_dns_extract_field_1]
REGEX = (updating)
FORMAT = is_updating::$1

[infoblox_dns_extract_field_2]
REGEX = DNS\sformat\serror\sfrom\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\sresolving\s(\S+)\/(\S+)\sfor\sclient\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\:\s(.+)
SOURCE_KEY = named_message
FORMAT = dest_ip::$1 dest_port::$2 error_query::$3 the_query_type::$4 src_ip::$5 src_port::$6 named_dns_format_error_message::$7

[infoblox_dns_extract_field_3]
REGEX = ^zone\s([^/]+)\/IN
SOURCE_KEY = named_message
FORMAT = zone::$1

[infoblox_dns_extract_field_4]
REGEX = transfer\sof\s'([^/]+)/IN'\sfrom\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5}):(.+)
SOURCE_KEY = named_message
FORMAT = zone::$1 dest_ip::$2 dest_port::$3 transfer_message::$4

[infoblox_dns_extract_field_5]
REGEX = client\s\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}#\d{1,5}(?:.+)?:\s(.*)
SOURCE_KEY = named_message
FORMAT = client_message::$1

[infoblox_dns_extract_field_6]
REGEX = error\s\(FORMERR\)\sresolving\s+'([^'/]+)/([^/]+)/IN':\s+(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})
SOURCE_KEY = named_message
FORMAT = error_query::$1 the_query_type::$2 dest_ip::$3 dest_port::$4

[infoblox_dns_extract_field_80]
REGEX = query\s+(?:\(cache\)\s+)?'([^/]+)'\s+(.+)
SOURCE_KEY = client_message
FORMAT = cache_query::$1 result::$2

[infoblox_dns_extract_field_81]
REGEX = query\s+(?:\(cache\)\s+)?'([^/]+)/IN'\s+(.+)
SOURCE_KEY = client_message
FORMAT = cache_query::$1 result::$2

[infoblox_dns_extract_field_82]
REGEX = query\s+(?:\(cache\)\s+)?'([^/]+)/([^/]+)/IN'\s+(.+)
SOURCE_KEY = client_message
FORMAT = cache_query::$1 the_query_type::$2 result::$3

[infoblox_dns_extract_field_9]
REGEX = zone\s'([^']+)'
SOURCE_KEY = client_message
FORMAT = zone::$1

[infoblox_dns_extract_field_10]
REGEX = connected\susing\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})
SOURCE_KEY = transfer_message
FORMAT = src_ip::$1 src_port::$2

[infoblox_dns_extract_field_11]
REGEX = client\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\/key\s(.+)
FORMAT = src_ip::$1 src_port::$2 named_message_client_key_message::$3

[infoblox_dns_extract_field_12]
REGEX = infoblox\s\(([^\)]+)\)\:[^\:]+\:[^\:]+\:[^\:]+\:(.+)
SOURCE_KEY = named_message_client_key_message
FORMAT = zone::$1 bad_zone_reason::$2

[infoblox_dns_extract_field_13]
REGEX = (dhcp_updater_default)\:\ssigner\s"([^"]+)"\s+(\S+)
SOURCE_KEY = named_message_client_key_message
FORMAT = command::$1 signer_name::$2 signer_status::$3

[infoblox_dns_extract_field_14]
REGEX = (dhcp_updater_default)\:\supdating\szone\s'([^']+)'\:\s(.+)\sat\s'([^']+)'\s(\w+)
SOURCE_KEY = named_message_client_key_message
FORMAT = command::$1 zone::$2 update_action::$3 record::$4 record_type_update::$5

[infoblox_dns_extract_field_15]
REGEX = (adding|deleting)\s(?<object>[^$]+)
SOURCE_KEY = update_action
FORMAT = the_action::$1 object::$2

[infoblox_dns_extract_field_16]
REGEX = client\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\:?\s[\S]+\s(query\s+)?(?:\(cache\)\s)?'(\S+)'\sdenied
SOURCE_KEY = named_message
FORMAT = src_ip::$1 src_port::$2 message_type::$3 cache_query::$4

[infoblox_dns_extract_field_17]
REGEX = client\s(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})#(\d{1,5})\:?\sreceived\snotify\sfor\szone\s'(\S+)'
SOURCE_KEY = named_message
FORMAT = src_ip::$1 src_port::$2 cache_query::$3

[infoblox_dns_rpz_qname_fields]
REGEX = rpz\s+(\w+)\s+[^\s]+\s+\w+\s+([\w\-\.]+)\s+\[(\w+)\]\s+via\s+([\w\-\.]+)
FORMAT = rpz_policy_trigger::$1 dns_rpz_query::$2 dns_rpz_record_type::$3 dns_rpz_reponse_query::$4

[infoblox_threatprotect_field_0]
REGEX=CEF:0\|\w+\|(\w+\s\w+)\|([^|]*)\|(\d+)\|([^\|]+)\|(\d)
FORMAT= nios_product::$1 product_version::$2 rule_id::$3 rule_name::$4 severity_id::$5

[infoblox_threatprotect_field_1]
REGEX=(?:\s+(?<infoblox_host>[^\s]+)\s+)?threat-protect-log

[infoblox_threatprotect_field_2]
REGEX=threat-protect-log(?:\[(?<pid>\d+)\]:|\[\]:|:)\s+(?<message>.*)

[infoblox_dns_query_type_lookup]
filename = infoblox_dns_query_type.csv
case_sensitive_match = false

[infoblox_dns_reply_code_id_lookup]
filename = infoblox_dns_reply_code_id.csv
case_sensitive_match = false

[infoblox_severity_lookup]
filename = infoblox_severity_lookup.csv
case_sensitive_match = false

[infoblox_audit_extract_field_0]
REGEX = \d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d+Z\s+\[(?<admin>[^\]]+)\]:\s+(?<infoblox_action>[^\(]+)\((?<request_type>POST|PUT|DELETE)\)\s+(?<uri>[^\s]+)\s+(?<datain>\{.*\})\s+(?<response_time>\d+.\d+)\s+(?<object_type>[^\s]+)\s+(?<object_name>[^:+|^\s]+)[:]*\s+(?<message>.*)

[infoblox_action_fields]
REGEX = Called|Created|Modified|Deleted|Login_Allowed|Login_Denied|First_Login|Logout|Password_Reset|Password_Expired|Password_Reset_Error|rebooted

[infoblox_audit_extract_field_1]
REGEX = \d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d+Z\s+\[(?<admin>[^\]]+)\]:\s+(?<infoblox_action>[[infoblox_action_fields]])\s+(?<object_type>[^\s]+)\s+(?<object_name>[^:+|^\s]+)[:]*\s*(?<message>.*)

[infoblox_audit_extract_action_unlocked]
REGEX = \d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d+Z\s+\[[^\]]+\]:\s+Admin\s+.*\s+(?<infoblox_action>unlocked)

[infoblox_audit_extract_field_2]
REGEX = \d{4}-\d{2}-\d{2}\s+\d{2}:\d{2}:\d{2}\.\d+Z\s+\[(?<admin>[^\]]+)\]:\s+(?<message>.*)
